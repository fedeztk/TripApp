import type {NextPage} from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {useSession, signIn, signOut} from "next-auth/react"
import {useContext, useEffect, useState} from "react";
import {func} from "prop-types";
import {json} from "stream/consumers";
import {useAppContext} from "../components/auth/MySession";
import {type} from "os";





export default function Home(){
    const {data: session} = useSession()
    const mycontext:any = useAppContext();
    const [data, setData] = useState<any>();

//NOTA: ho notato che ()=>getData() renderizza l'obj una volta in più
    useEffect(()=>getData, [])

    function getData(){
        console.log("--> useEffect: getData()")
        const postReqOpt:any = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name : session?.user,
                id : mycontext.data //nullo alla prima renderizzazione
                            //dalla seconda (trigger bottone "Send Request") si vedrà
                            //nel log del server l'id
            })
        }

        fetch("http://localhost:3000/api/hello", postReqOpt)
            .then(res => res.json())
            .catch(error => console.error('Errore nella risposta del API:', error))
            .then((result)=> {
                console.log("##res##")
                console.log(result);
                mycontext.setData(result);//setto il risultato come proprietà globale
                setData(result);//setto il risultato come stato dell'oggetto
                console.log("##resEnd##")
            })
        return
    }


    console.log("Data: ")
    console.log(data)
    console.log()

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <nav className={styles.navbar}>
                <div className={styles.signup}>
                    {session?.user ? (
                        <button onClick={() => signOut()}>Sign out {session.user.name}</button>
                    ) : (
                        <button onClick={() => signIn()}>Sign in</button>
                    )}
                </div>
            </nav>
            <div className={styles.main}>
                    <button onClick={getData}>Send Request</button>
            </div>
        </div>
    )
}

